{"version":3,"sources":["components/Favoritebox.js","components/Mainview.js","components/Favorites.js","components/Info.js","components/Viewimage.js","components/Menu.js","App.js","index.js"],"names":["useStyles","makeStyles","cameraImage","maxWidth","maxHeight","display","marginLeft","marginRight","cameraImgDiv","width","position","top","mainContainer","height","margin","paddingTop","paddingLeft","paddingRight","border","boxShadow","stationTitle","fontSize","marginBottom","overflow","deleteButton","left","viewButton","Favoritebox","props","styles","useState","cameraUrl","setCameraUrl","updateCameraUrl","loaded","thisLocationCameras","cameraData","cameraStations","filter","data","Number","nearestWeatherStationId","station","stationId","cameraPresets","imageUrl","useEffect","Container","className","fixed","Typography","align","stationName","src","alt","IconButton","onClick","deleteFavorite","Delete","color","component","Link","to","fromView","searchContainer","borderRadius","marginTop","resultContainer","subtitle","searchButton","searchHelpText","searchHelpText2","listItem","favoritesContainer","gridCont","allFavButton","float","noFavCont","searchField","progress","errorText","Mainview","userInput","setUserInput","searchResultList","setSearchResultList","inputError","setInputError","connError","setConnError","updateSearchResultList","term","newResultList","stationList","idx","findIndex","obj","toLowerCase","includes","loadStationDataFromApi","connTimer","setTimeout","clearTimeout","latestInput","input","setLatestInput","variant","favorites","length","Grid","container","justify","map","CircularProgress","noFav","Button","onSubmit","e","preventDefault","String","TextField","size","onChange","target","value","error","Boolean","helperText","type","List","ListItem","ListItemText","primary","addFavorite","Favorite","title","minHeight","Favorites","infoText","Info","backButton","favoriteButton","updatedText","picDiv","Viewimage","history","useHistory","useParams","cameraUrls","setCameraUrls","setTitle","forEach","comparisonDate","sub","Date","months","camera","isAfter","parseISO","measuredTime","url","updated","updateCameraUrls","push","ArrowBack","cam","format","listitem","list","paper","backgroundColor","fontWeight","Menu","Drawer","open","classes","primaryTypographyProps","App","rawCameraData","setRawCameraData","setStationList","setFavorites","setLoaded","snackOpen","setSnackOpen","snackMessage","useRef","localStorage","getItem","JSON","parse","setItem","stringify","a","headersObj","headers","combinedList","fetch","conn","json","conn2","weatherStations","features","stationData","id","newListItem","properties","names","fi","cameraId","name","console","log","stationToAdd","newFavArray","currentStation","duplicates","entry","current","fav","path","exact","Snackbar","autoHideDuration","onClose","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff12dddd.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography, IconButton } from '@material-ui/core';\nimport { Delete, KeyboardArrowRight as Arrow } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    cameraImage :       { maxWidth : \"120px\",\n                          maxHeight : \"80px\",\n                          display : \"block\",\n                          marginLeft : \"auto\",\n                          marginRight : \"auto\"},\n    cameraImgDiv :      { width : \"150px\",\n                          position : \"absolute\",\n                          top : \"40px\"},\n    mainContainer :     { height : \"180px\",\n                          maxWidth : \"150px\",\n                          margin : \"15px\",\n                          paddingTop : \"5px\",\n                          paddingLeft : \"0\",\n                          paddingRight : \"0\",\n                          border : \"1px solid lightgrey\",\n                          boxShadow : \"3px 3px 3px lightgrey\",\n                          position : \"relative\"},\n    stationTitle :      { fontSize : \"11px\",\n                          maxWidth : \"140px\",\n                          marginBottom : \"5px\",\n                          maxHeight : \"33px\",\n                          overflow : \"hidden\" },\n    deleteButton :      { marginRight : \"52px\",\n                          position : \"absolute\",\n                          top : \"130px\",\n                          left : \"5\" },\n    viewButton :        { position : \"absolute\",\n                          top : \"130px\",\n                          left : \"100px\" }\n});\n\nexport default function Favoritebox(props) {\n\n    const styles = useStyles();\n\n    const [cameraUrl, setCameraUrl] = useState([]);\n\n    const updateCameraUrl = () => {\n\n        if (props.loaded) {\n\n            let thisLocationCameras = props.cameraData.cameraStations.filter( (data) => {\n                return (Number(data.nearestWeatherStationId) === Number(props.station.stationId));\n            });\n            setCameraUrl(thisLocationCameras[0].cameraPresets[0].imageUrl);\n        }\n    }\n\n    useEffect( () => {\n        updateCameraUrl();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect( () => {\n        updateCameraUrl();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.loaded]);\n\n    return (\n        <Container className={styles.mainContainer} \n                   fixed>\n\n            <Typography className={styles.stationTitle}\n                        align=\"center\"\n            >{props.station.stationName}</Typography>\n            \n            <div className={styles.cameraImgDiv}>\n                <img src={cameraUrl} \n                    className={styles.cameraImage} \n                    alt=\"Road\"\n                ></img>\n            </div>\n\n            <IconButton className={styles.deleteButton}\n                        onClick={ () => {props.deleteFavorite(props.station.stationId)} }>\n                <Delete color=\"primary\"></Delete>\n            </IconButton>\n\n            <IconButton className={styles.viewButton}\n                        component={Link}\n                        to={`/rwc/viewimage/${props.station.stationId}/${props.fromView}`}>\n                <Arrow color=\"primary\"></Arrow>\n            </IconButton>\n\n        </Container>\n    );\n}","import { Button, Container, IconButton, List, ListItem, \n    ListItemText, TextField, Typography, Grid, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { KeyboardArrowRight as Arrow, Favorite } from '@material-ui/icons/';\nimport Favoritebox from './Favoritebox';\n\nconst useStyles = makeStyles({\n    mainContainer :     { marginLeft : \"180px\",\n                          paddingTop : \"30px\" },\n    searchContainer:    { borderRadius : \"5px\",\n                          border : \"1px solid lightgrey\",\n                          boxShadow : \"3px 3px 3px lightgrey\",\n                          marginTop : \"30px\",\n                          overflow : \"auto\"},\n    resultContainer :   { maxHeight : \"500px\",\n                          overflow : \"auto\",\n                          marginBottom : \"10px\",\n                          position : \"relative\"},\n    subtitle :          { marginTop : \"10px\"},\n    searchButton :      { marginLeft : \"30px\",\n                          width : \"100px\" },\n    searchHelpText :    { marginTop : \"10px\",\n                          marginBottom : \"15px\"},\n    searchHelpText2 :   { marginTop : \"30px\",\n                          marginLeft : \"25px\"},\n    listItem :          { border : \"1px solid lightgrey\",\n                          margin : \"2px\",\n                          borderRadius : \"3px\",\n                          width : \"450px\" },\n    favoritesContainer: { height : \"300px\",\n                          width : \"600px\",\n                          borderRadius : \"5px\",\n                          border : \"1px solid lightgrey\",\n                          boxShadow : \"3px 3px 3px lightgrey\",\n                          marginTop : \"30px\",\n                          marginLeft : \"auto\",\n                          marginRight : \"auto\"},\n    gridCont :          { marginLeft : \"auto\",\n                          marginRight : \"auto\",\n                          height : \"212px\",\n                          overflow : \"hidden\"},\n    allFavButton:       { float: \"right\"},\n    noFavCont :         { height : \"212px\",\n                          paddingTop :\"40px\" },\n    searchField :       { marginLeft : \"60px\"},\n    progress :          { display : \"block\",\n                          marginLeft : \"auto\",\n                          marginRight : \"auto\",\n                          marginTop : \"40px\"},\n    errorText :         { marginTop : \"20px\",\n                          color : \"red\"}\n});\n\nexport default function Mainview(props){\n\n    const styles = useStyles();\n    const [userInput, setUserInput] = useState();   \n    const [searchResultList, setSearchResultList] = useState([]);\n    const [inputError, setInputError] = useState();\n    const [connError, setConnError] = useState(\"\");\n\n    const updateSearchResultList = (term) => {\n\n        let uniqueNameList = props.stationList.filter( (data, idx) => {\n            return (props.stationList.findIndex(obj => obj.stationName === data.stationName) === idx);\n        });\n\n        let newResultList = uniqueNameList.filter( (data) => {\n            return (data.stationName.toLowerCase().includes(term.toLowerCase()));\n        });\n\n        setSearchResultList(newResultList);\n    }\n\n    const formHandler = (e) => {\n        e.preventDefault();\n\n        if (!userInput) {\n            setInputError(\"Enter search term.\");\n        } else if (!props.loaded) {\n            setInputError(\"Unable to fetch data. Try again later.\");\n        } else {\n            setInputError(\"\");\n            updateSearchResultList(String(userInput));\n            props.setLatestInput({...props.latestInput, input : userInput});\n        }\n    }\n\n    useEffect( () => {\n        if (!props.stationList) {\n            props.loadStationDataFromApi();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []); \n\n    useEffect( () => {\n        let connTimer = setTimeout( () => { if (!props.loaded) {\n                              setConnError(\"Error fetching data. Please try again later.\"); \n                          }}, 15000);\n        clearTimeout(connTimer);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect( () => {\n        if (props.latestInput.fromView) {\n            if (props.latestInput.input) {\n                updateSearchResultList(props.latestInput.input);\n            }\n            props.setLatestInput({...props.latestInput, fromView : false});\n        } else {\n            props.setLatestInput({...props.latestInput, input : \"\"});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []); \n\n    return (\n        <Container maxWidth=\"md\"\n                   className={styles.mainContainer}>\n\n            <Typography align=\"center\"\n                        variant=\"h5\"\n            >Road Weather Cameras</Typography>\n\n            <Container maxWidth=\"sm\"\n                        className={styles.favoritesContainer}>\n\n                <Typography className={styles.subtitle}\n                            variant=\"h6\"\n                >Favorites</Typography>\n\n                { (props.favorites.length > 0)\n\n                ?   (props.loaded)\n                \n                    ?   <Grid container\n                            justify=\"center\"\n                            className={styles.gridCont}>\n                            \n                            { props.favorites.map( (station) => {\n                                return (\n                                    <Favoritebox key={station.stationId}\n                                                cameraData={props.cameraData}\n                                                deleteFavorite={props.deleteFavorite}\n                                                station={station}\n                                                fromView=\"1\"\n                                                loaded={props.loaded}\n                                    ></Favoritebox>\n                                );\n                            })}\n                        </Grid>\n\n                    :   <Container className={styles.noFavCont}>\n                            <CircularProgress className={styles.progress}></CircularProgress>\n                        </Container>\n\n                : <Container className={styles.noFavCont}>\n                        <Typography className={styles.noFav}\n                                    align=\"center\"\n                                    variant=\"h6\"\n                        >No favorites yet</Typography>\n                  </Container>\n                }\n\n                <Button className={styles.allFavButton}\n                        component={Link}\n                        to=\"/rwc/favorites\"\n                >All favorites \n                    <Arrow/>\n                </Button>\n\n            </Container>\n\n            <Container maxWidth=\"sm\"\n                       className={styles.searchContainer}>\n\n                <Typography className={styles.subtitle}\n                            variant=\"h6\"\n                >Search locations</Typography>\n\n                <Typography className={styles.searchHelpText}\n                >Search for a location. Location names in finnish, eg. \"Tie 7\" or \"Helsinki\"</Typography>\n\n                <form onSubmit={formHandler}>\n                    <TextField variant=\"outlined\"\n                               size=\"small\"\n                               onChange={ (e) => {setUserInput(e.target.value)}}\n                               error={Boolean(inputError)}\n                               helperText={inputError}\n                               className={styles.searchField}\n                    ></TextField>\n\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            className={styles.searchButton}\n                    >Search</Button>\n\n                </form>\n\n                { (props.latestInput.input)\n                    ?            <Typography className={styles.searchHelpText2}\n                                >Search results for: {props.latestInput.input}</Typography>\n                    :           \"\"\n                }\n\n                <Container className={styles.resultContainer}>\n\n                    <List>\n\n                    {   searchResultList.map( (data, idx) => {\n\n                        return(\n\n                        <ListItem key={idx}\n                                  className={styles.listItem}>\n                            <ListItemText primary={data.stationName}>\n\n                            </ListItemText>\n\n                            <IconButton component={Link}\n                                        to={`/rwc/viewimage/${data.stationId}/1`}>\n                                <Arrow color=\"primary\"></Arrow>\n                            </IconButton>\n\n                            <IconButton onClick={() => {props.addFavorite(data.stationId)}}>\n                                <Favorite color=\"primary\"></Favorite>\n                            </IconButton>\n\n                        </ListItem>);\n                    })}\n\n                    </List>\n                </Container>\n\n            </Container>\n            \n            { (connError) \n                ? <Typography align=\"center\" \n                              variant=\"h6\" \n                              className={styles.errorText}\n                >{connError}</Typography>\n                : \"\"\n            }\n            \n        </Container>\n    );\n\n}","import { Container, Typography, Grid, Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Favoritebox from './Favoritebox';\nimport { Delete } from '@material-ui/icons';\nimport { useEffect } from 'react';\n\nconst useStyles = makeStyles({\n    mainContainer :     { marginLeft : \"180px\",\n                          paddingTop : \"30px\" ,\n                          paddingRight : \"18px\"},\n    title :             { marginBottom : \"30px\"},\n    gridCont :          { borderRadius : \"5px\",\n                          border : \"1px solid lightgrey\",\n                          boxShadow : \"3px 3px 3px lightgrey\",\n                          marginTop : \"30px\",\n                          overflow : \"auto\",\n                          minHeight : \"212px\"},\n    noFav :             { marginTop : \"80px\"},\n    noFavCont :         { borderRadius : \"5px\",\n                          border : \"1px solid lightgrey\",\n                          boxShadow : \"3px 3px 3px lightgrey\",\n                          marginTop : \"30px\",\n                          height : \"212px\" },\n    deleteButton :      { marginTop : \"10px\",\n                          float : \"right\" },\n    progress :          { display : \"block\",\n                          marginLeft : \"auto\",\n                          marginRight : \"auto\",\n                          marginTop : \"80px\"}\n});\n\nexport default function Favorites(props){\n\n    const styles = useStyles();\n\n    const deleteButtonHandler = () => {\n        props.deleteFavorite(1);\n    }\n\n    useEffect( () => {\n        if (!props.stationList) {\n            props.loadStationDataFromApi();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []); \n\n    return (\n        <Container maxWidth=\"md\"\n                   className={styles.mainContainer}>\n\n            <Typography align=\"center\"\n                        variant=\"h5\"\n                        className={styles.title}\n            >Favorites</Typography>\n\n            { (props.favorites.length > 0)\n\n            ?   (props.loaded)\n                \n                ?   <Grid container\n                            className={styles.gridCont}>\n                        \n                        { props.favorites.map( (station) => {\n                            return (\n                                <Favoritebox key={station.stationId} \n                                            cameraData={props.cameraData}\n                                            deleteFavorite={props.deleteFavorite}\n                                            station={station}\n                                            fromView=\"2\"\n                                            loaded={props.loaded}\n                                ></Favoritebox>\n                            );\n                        })}\n                    </Grid>\n\n                :   <Container className={styles.noFavCont}>\n                        <CircularProgress className={styles.progress}></CircularProgress>\n                    </Container>\n\n            : <Container className={styles.noFavCont}>\n                    <Typography className={styles.noFav}\n                                align=\"center\"\n                                variant=\"h6\"\n                    >No favorites yet</Typography>\n                </Container>\n            }\n\n            <Button className={styles.deleteButton}\n                    color=\"primary\"\n                    onClick={deleteButtonHandler}>\n                <Delete/> Delete all favorites\n            </Button>\n\n        </Container>\n    );\n\n}","import { Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n    mainContainer :     { marginLeft : \"180px\",\n                          paddingTop : \"30px\" },\n    title :             { marginBottom : \"30px\"},\n    infoText:           { marginTop : \"20px\"}\n});\n\nexport default function Info(){\n\n    const styles = useStyles();\n\n    return (\n        <Container maxWidth=\"md\"\n                   className={styles.mainContainer}>\n            \n            <Typography align=\"center\" \n                        variant=\"h5\"\n                        className={styles.title}\n            >Welcome to RWC</Typography>\n\n            <Typography className={styles.infoText}>This service allows the user to search and view road weather camera images.\n                The search function is a free text search in the name of the locations. \n                You can use, for example, road numbers or city names (or parts of) to search.\n            </Typography>\n\n            <Typography className={styles.infoText}>Locations can be saved to favorites by clicking the heart icon.  Favorites are stored in the \n                browser's local storage, so they will persist until the browser cache is cleared. Favorites can be removed from the favorites view\n                or from the search view by clicking the trashcan icon.\n            </Typography>\n\n            <Typography className={styles.infoText}>Please note that city/municipality information in the location search is not exact,\n                because many roads (road numbers) span across multiple municipalities. Also the location of the\n                cameras is defined by the nearest weather station in the data, which is not always the same thing as\n                the actual location of the camera. If you know a camera exists, but cannot find it with a city name, it might be possible\n                to find with a road number.\n            </Typography>\n\n            <Typography className={styles.infoText}>This service is a study assignment, made using JS / React / Material UI.</Typography>\n            <Typography className={styles.infoText}>Source of data Fintraffic / digitraffic.fi, license CC 4.0 BY</Typography>\n            <Typography className={styles.infoText}>Hannu Tätilä, XAMK 2021</Typography>\n\n\n        </Container>\n    );\n\n}","import { useParams } from 'react-router-dom';\nimport { Container, List, ListItem, Typography, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ArrowBack, Favorite } from '@material-ui/icons/';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { parseISO, isAfter, sub, format } from 'date-fns';\n\nconst useStyles = makeStyles({\n    mainContainer :     { marginLeft : \"180px\",\n                          paddingTop : \"30px\" },\n    cameraImage :       { maxWidth : \"720px\",\n                          maxHeight : \"580px\"},\n    backButton :        { marginLeft : \"15px\"},\n    favoriteButton :    { marginLeft : \"600px\"},\n    title :             { marginLeft : \"30px\",\n                          marginTop : \"20px\"},\n    updatedText :       { fontSize : \"12px\",\n                          marginBottom : \"5px\"},\n    picDiv :            { maxWidth : \"740px\" }\n});\n\nexport default function Viewimage(props){\n\n    const styles = useStyles();\n    const history = useHistory();\n    \n    const { stationId } = useParams();\n    const { fromView } = useParams();\n    \n    const [cameraUrls, setCameraUrls] = useState([]);\n    const [title, setTitle] = useState();\n\n    const updateTitle = () => {\n        props.stationList.forEach( (station) => {\n            if (station.stationId === Number(stationId)) {\n                setTitle(station.stationName);\n            }\n        });\n    }\n\n    const updateCameraUrls = () => {\n\n        let thisLocationCameras = props.cameraData.cameraStations.filter( (data) => {\n            return (Number(data.nearestWeatherStationId) === Number(stationId));\n        });\n    \n        let cameraUrls = [];\n        let comparisonDate = sub(new Date(), { months : 2 });\n\n        thisLocationCameras.forEach( (data) => {\n            data.cameraPresets.forEach( (camera) => {\n\n                if (isAfter(parseISO(camera.measuredTime), comparisonDate)) {\n                    cameraUrls = [...cameraUrls, {url : camera.imageUrl, \n                                                  updated : camera.measuredTime}];\n                }\n\n            });\n        });\n    \n        setCameraUrls(cameraUrls);\n    }\n\n    const backButtonHandler = () => {\n\n        if (Number(fromView) === 2) {\n            history.push(\"/rwc/favorites\");\n        } else {\n            props.setLatestInput({...props.latestInput, fromView : true});\n            history.push(\"/rwc/search\");\n        }\n    }\n\n    useEffect( () => {\n        updateTitle();\n        updateCameraUrls();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [] );\n\n    return (\n        <Container maxWidth=\"md\"\n                   className={styles.mainContainer}>\n\n            <Button onClick={backButtonHandler}\n                    className={styles.backButton}>\n                <ArrowBack color=\"primary\"/>\n            Back</Button>\n\n            { (Number(fromView) === 2)\n            ?           \"\"  \n            :           <IconButton className={styles.favoriteButton}\n                                    onClick={ () => { props.addFavorite(stationId) }}>\n                            <Favorite color=\"primary\"/>\n                        </IconButton>\n            }     \n\n            <Typography variant=\"h6\"\n                        className={styles.title}\n            >{title}</Typography> \n\n            <List>\n            {   cameraUrls.map( (cam) => {\n\n                return(\n                    <ListItem key={cam.url}>\n                        <div className={styles.picDiv}>\n\n                            <img className={styles.cameraImage} \n                                 src={cam.url} alt=\"Road\"/>\n\n                            <Typography className={styles.updatedText}\n                                        align=\"left\"\n                            >Updated: {format(parseISO(cam.updated),\"d.M.yyyy HH.mm\")}</Typography>\n\n                        </div>\n                    </ListItem>\n                );\n            })}\n            </List>\n\n\n        </Container>\n    );\n    \n}","import { Drawer, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    listitem :  { marginTop : \"10px\" ,\n                  color : \"white\" },\n    list :      { paddingTop :\"50px\" },\n    paper :     { backgroundColor : \"#2196F3\",\n                  color : \"white\",\n                  paddingTop : \"30px\",\n                width : \"170px\" },\n    title :     { marginTop : \"0\",\n                  fontWeight : \"bold\" },\n    subtitle :  { fontSize : \"12px\"}\n});\n\nexport default function Menu(props){\n\n    const styles = useStyles();\n\n    return (      \n\n        <Drawer variant=\"permanent\"\n                open={true}\n                classes={{\n                    paper : styles.paper\n                }}>\n\n            <Typography variant=\"h5\"\n                        align=\"center\"\n                        className={styles.title}\n            >Road</Typography>\n\n            <Typography variant=\"h5\"\n                        align=\"center\"\n                        className={styles.title}\n            >Weather</Typography>\n\n            <Typography variant=\"h5\"\n                        align=\"center\"\n                        className={styles.title}\n            >Cameras</Typography>\n\n            <Typography variant=\"body1\"\n                        align=\"center\"\n                        className={styles.subtitle}\n            >Hannu Tätilä 2021</Typography>\n\n            <List className={styles.list}>\n\n                <ListItem component={Link}\n                          to=\"/rwc/\">\n                    <ListItemText primary=\"Welcome\" \n                                  primaryTypographyProps={{variant : \"button\", align : \"right\"}}\n                                  className={styles.listitem}/>\n                </ListItem>\n\n                <ListItem component={Link}\n                          to=\"/rwc/search\">\n                    <ListItemText primary=\"Search\" \n                                  primaryTypographyProps={{variant : \"button\", align : \"right\"}}\n                                  className={styles.listitem}/>\n                </ListItem>\n\n                <ListItem component={Link}\n                          to=\"/rwc/favorites\">\n                    <ListItemText primary=\"Favorites\"\n                                  primaryTypographyProps={{variant : \"button\", align : \"right\"}} \n                                  className={styles.listitem}/>\n                </ListItem>\n\n            </List>\n\n        </Drawer>);\n\n}","import { BrowserRouter as Router, Route} from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport Mainview from './components/Mainview';\nimport Favorites from './components/Favorites';\nimport Info from './components/Info';\nimport Viewimage from './components/Viewimage';\nimport Menu from './components/Menu';\n\nfunction App() {\n\n  const [rawCameraData, setRawCameraData] = useState({});\n  const [stationList, setStationList] = useState();\n  const [latestInput, setLatestInput] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const snackMessage = useRef();\n\n  const loadFavorites = () => {\n    if (localStorage.getItem(\"favorites\")) {\n      setFavorites(JSON.parse(localStorage.getItem(\"favorites\")));\n    } else {\n      setFavorites([]);\n    }\n  }\n\n  const saveFavorites = () => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }\n\n  useEffect( () => {\n    loadFavorites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect( () => {\n    saveFavorites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [favorites]);\n\n  const loadStationDataFromApi = async () => {\n    setLoaded(false);\n\n    let headersObj = { headers: { \"Digitraffic-User\": \"chata002Xamk\", \"User-Agent\": \"RWC/1.0\" } };\n    let cameraData;\n    let weatherStations;\n    let combinedList = [];\n\n    try {\n      let conn = await fetch(\"https://tie.digitraffic.fi/api/v1/data/camera-data\", headersObj);\n      cameraData = await conn.json();\n\n      let conn2 = await fetch(\"https://tie.digitraffic.fi/api/v3/metadata/weather-stations\", headersObj);\n      weatherStations = await conn2.json();\n\n      setRawCameraData(cameraData);\n\n      cameraData.cameraStations.forEach( (cameraData) => {\n        weatherStations.features.forEach( (stationData) => {\n            if (cameraData.nearestWeatherStationId === stationData.id) {\n\n                let newListItem = { stationId : stationData.id, \n                                    stationName : stationData.properties.names.fi,\n                                    cameraId : cameraData.id }\n\n                if (!newListItem.stationName) {\n                    newListItem.stationName = stationData.properties.name;\n                }\n\n                combinedList = [...combinedList, newListItem];\n                \n            }\n        });\n      });\n\n      setLoaded(true);\n\n    } catch (exception) {\n\n      console.log(`Error fetching resources: ${exception}`);\n\n    }\n    \n    setStationList(combinedList);\n  }\n\n  const addFavorite = (stationToAdd) => {\n\n    let newFavArray = [...favorites];\n\n    let currentStation = stationList.filter( (station) => {\n      return station.stationId === Number(stationToAdd);\n    });\n\n    let duplicates = newFavArray.filter( (entry) => {\n      return entry.stationId === Number(stationToAdd);\n    });\n\n    if (duplicates.length === 0) {\n      newFavArray.push(currentStation[0]);\n      setFavorites(newFavArray);\n\n      if (!snackOpen) {\n        snackMessage.current = \"Favorite added\";\n        setSnackOpen(true);\n      } \n    } else if (duplicates.length > 0) {\n      if (!snackOpen) {\n        snackMessage.current = \"Already in favorites\";\n        setSnackOpen(true);\n      } \n    }\n  }\n\n  const deleteFavorite = (stationId) => {\n\n    if (stationId === 1) {\n      setFavorites([]);\n\n    } else {\n      let newFavArray = favorites.filter( (fav) => {\n        return fav.stationId !== stationId;\n      });\n\n      setFavorites(newFavArray);\n\n      if (!snackOpen) {\n        snackMessage.current = \"Favorite removed\";\n        setSnackOpen(true);\n      } \n    }\n  }\n\n  const handleSnackClose = () => {\n    setSnackOpen(false);\n  }\n\n  return (\n    <Router>\n\n      <Menu></Menu>\n\n      <Route path=\"/rwc/search\" >\n        <Mainview stationList={stationList}\n                  latestInput={latestInput} \n                  setLatestInput={setLatestInput}\n                  loadStationDataFromApi={loadStationDataFromApi}\n                  favorites={favorites}\n                  deleteFavorite={deleteFavorite}\n                  addFavorite={addFavorite}\n                  cameraData={rawCameraData}\n                  loaded={loaded}\n        ></Mainview>\n      </Route>\n\n      <Route path=\"/rwc/favorites\">\n        <Favorites stationList={stationList} \n                    loadStationDataFromApi={loadStationDataFromApi}\n                    favorites={favorites}\n                    cameraData={rawCameraData}\n                    deleteFavorite={deleteFavorite}\n                    loaded={loaded}\n        ></Favorites>\n      </Route>\n\n      <Route path=\"/rwc\" exact>\n        <Info></Info>\n      </Route>\n\n      <Route path=\"/rwc/viewimage/:stationId/:fromView/\">\n        <Viewimage cameraData={rawCameraData}\n                   latestInput={latestInput} \n                   setLatestInput={setLatestInput}\n                   addFavorite={addFavorite}\n                   stationList={stationList}\n        ></Viewimage>\n      </Route>\n\n      <Snackbar open={snackOpen}\n                autoHideDuration={Number(2000)}\n                onClose={handleSnackClose}\n                message={snackMessage.current}\n      ></Snackbar>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}